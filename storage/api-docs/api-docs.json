{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel E-Commerce API Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "hadeer@etax.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "operationId": "5d4fa5d5607ed675ba93907e1fc94534",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateUser"
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user registered successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ],
                                                "password": [
                                                    "The password must be at least 8 characters."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to register user"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of categories",
                "description": "Retrieve a paginated list of categories with their attachments.",
                "operationId": "b1b247b2b491b0491c3c728dc33f23f0",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "c86cd7a85ad06a4fe905bfab62146952",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCategory"
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create category"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve a specific category",
                "operationId": "486849467f411ec5e4bdf111f50ede87",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/Category"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "operationId": "b648463d94e0caf7b8d842a1008789b2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCategory"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "500": {
                        "description": "Failed to update category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update category"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "491dfe5b6b58b480181690ede6550e44",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete Category"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/import": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Import categories from a file",
                "operationId": "337806b411bcca97e863b869f6420d76",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "categories"
                                ],
                                "properties": {
                                    "categories": {
                                        "description": "The file containing categories to import (xlsx, xls, csv)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import Categories successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Import Categories successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Import Categories failed"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "categories": "The categories field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Import Categories failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "description": "Retrieve a list of all users.",
                "operationId": "7208c29037df2b8bb02499ba39ed8a78",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "users retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "262eb5ca1fdea354023c0a8870442c1e",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateUser"
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create user"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a specific user",
                "operationId": "6946bbab7898f59a09e3c8e529a38907",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "operationId": "05028d02ea3e9a99abd6260cfe05b179",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateUser"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    },
                    "500": {
                        "description": "Failed to update user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update user"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "b3d28da5dc9de7fc1bd425f93b54ff7b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete User"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "title": "Category Resource",
                "description": "A representation of a category",
                "required": [
                    "id",
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the category",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The title of the category",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "image": {
                        "description": "The URL of the category's image",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/storage/image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Resource",
                "description": "A representation of a user",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the user",
                        "type": "string",
                        "example": "hadeer"
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "example": "hadeer@gmail.com"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "404": {
                "description": "Category not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Category not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "CreateCategory": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "required": [
                                "title"
                            ],
                            "properties": {
                                "title": {
                                    "description": "The title of the category",
                                    "type": "string",
                                    "example": "Electronics"
                                },
                                "image": {
                                    "description": "The image file associated with the category",
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "CreateUser": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "required": [
                                "name",
                                "email",
                                "password",
                                "password_confirmation"
                            ],
                            "properties": {
                                "name": {
                                    "description": "The name of the user",
                                    "type": "string",
                                    "example": "hadeer"
                                },
                                "email": {
                                    "description": "The email associated with the user",
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "password_confirmation": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "UpdateUser": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "required": [
                                "name",
                                "email"
                            ],
                            "properties": {
                                "name": {
                                    "description": "The name of the user",
                                    "type": "string",
                                    "example": "hadeer"
                                },
                                "email": {
                                    "description": "The email associated with the user",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Categories",
            "description": "Categories"
        }
    ]
}